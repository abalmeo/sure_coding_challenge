{"version":3,"sources":["components/layout/Navbar.js","components/layout/QuoteOverview.js","components/utils/utils.js","components/layout/RatingInformation.js","App.js","index.js"],"names":["Navigation","Navbar","sticky","bg","variant","Brand","href","className","Nav","Link","QuoteOverview","data","JSON","parse","localStorage","getItem","setupTime","now","Date","getTime","useState","collision","deductible","formData","clear","to","error","quote","rating_address","line_1","line_2","city","region","postal","policy_holder","first_name","last_name","variable_options","deductible_values","values","map","val","ind","value","key","collision_values","asteroid_collision","Row","Col","md","span","offset","Card","text","style","width","height","Header","Body","title","Title","description","name","type","validate","errors","body","address","Object","keys","length","createRatingProfile","undefined","console","log","a","axios","post","results","RatingInformation","page_reload","setFormData","onFormChange","e","target","onFormSubmit","preventDefault","setItem","stringify","window","location","stateOptions","states","state","onSubmit","placeholder","onChange","required","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da1a4392.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst Navigation = () => {\n  return (\n    <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\n    <Navbar.Brand href=\"/\">\n      <i className=\"fas fa-rocket\"/>{\" \"}\n      <span>Rocket Insurance</span>\n      </Navbar.Brand>\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/\">Rating Information</Nav.Link>\n      <Nav.Link href=\"/quote-overview\">Quote Overview</Nav.Link>\n    </Nav>\n  </Navbar>\n  )\n}\n\n\nexport default Navigation\n","import React, {useState, useEffect} from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nconst QuoteOverview = () => {\n\n  // Get data from local storage\n  const data = JSON.parse(localStorage.getItem('userData'));\n  const insurancePlan = JSON.parse(localStorage.getItem('insurancePLan'));\n  const setupTime = localStorage.getItem('setupTime');\n  const now = new Date().getTime();\n\n  const [formData, setFormData] = useState({\n    collision: \"\",\n    deductible: \"\",\n  });\n\n  const {\n    collision,\n    deductible,\n  } = formData;\n\n\n  const onFormChange = e => {\n    setFormData({ ...formData, [e.target.name] : e.target.value});\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    // update time and add insurancePlan to local storage\n    localStorage.setItem('setupTime', now);\n    localStorage.setItem('insurancePlan', formData);\n  };\n\n  // Clear localStorage if current time is 1 hour passed setupTime and redirect to form\n  if (now-setupTime > 1*60*60*1000) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Clear localStorage and Redirect to form if invalid data\n  if (data === null || data.error === true) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Destructuring response data\n  const {\n    quote: {\n      rating_address: {\n        line_1,\n        line_2,\n        city,\n        region,\n        postal\n      },\n      policy_holder: {\n        first_name,\n        last_name\n      },\n      variable_options,\n    }} = data;\n\n    // Mapping through returned values\n    const deductible_values = variable_options.deductible.values.map((val, ind) => (\n      <option value={val} key={val}> Option {ind+1}: {val}</option>\n      )\n    );\n\n    const collision_values = variable_options.asteroid_collision.values.map((val, ind) => (\n      <option value={val} > Option {ind+1}: {val}</option>\n    )\n  );\n\n  return (\n    <div className=\"quoteBackground\">\n      <div className=\" container userGreeting\">\n        Hi {first_name}, we're excited you've chosen us for rocket owner's insurance! Please see the available plans listed below*.\n      </div>\n      <div></div>\n      <Row>\n        <Col md={{span: 3, offset: 1}}>\n            <Card className=\"insuranceCard\" bg=\"secondary\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n              <Card.Header className=\"cardOverview\">Profile</Card.Header>\n              <Card.Body>\n                <table>\n                  <tdata>Policy Holder: {first_name} {last_name}</tdata><br/>\n                  <tdata>Address: {line_1} {line_2} {city}, {region} {postal}</tdata>\n                </table>\n              </Card.Body>\n            </Card>\n        </Col>\n\n        <Col md={{span: 3, offset: 1}}>\n          <Card className=\"insuranceCard\" bg=\"warning\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n            <Card.Header className=\"cardOverview\">{variable_options.deductible.title}*</Card.Header>\n            <Card.Body>\n              <Card.Title>{variable_options.deductible.description}</Card.Title>\n            </Card.Body>\n            <Card.Body>\n              <form className=\"insurance-registration\">\n                <div>\n                  <select\n                    name=\"deductible\"\n                    value={deductible_values}\n                    className=\"insurance-selection\"\n                    >\n                    {deductible_values}\n                  </select>\n                </div>\n                <input className=\"submitButton\" type='submit'/>\n              </form>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={{span: 3, offset: 1}}>\n            <Card className=\"insuranceCard\" bg=\"info\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n              <Card.Header className=\"cardOverview\">{variable_options.asteroid_collision.title}*</Card.Header>\n              <Card.Body>\n                <Card.Title>{variable_options.asteroid_collision.description}</Card.Title>\n              </Card.Body>\n                <Card.Body>\n                <form className=\"insurance-registration\">\n                <div>\n                  <select\n                    name=\"collision\"\n                    value={collision_values}\n                    className=\"insurance-selection\"\n                    >\n                    {collision_values}\n                  </select>\n                </div>\n                <input className=\"submitButton\" type='submit'/>\n              </form>\n              </Card.Body>\n            </Card>\n          </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default QuoteOverview;\n","import axios from \"axios\";\n\n// Validate incoming values\nexport const validate = values => {\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = values;\n\n  let errors = {};\n\n  if (!first_name) {\n    errors.first_name = 'First name is required';\n  }\n\n  if (!last_name) {\n    errors.last_name = 'Last name is required';\n  }\n\n  if (!line_1) {\n    errors.line_1 = 'Address required';\n  }\n\n  if (!city) {\n    errors.city = 'City required';\n  }\n\n  if (!region) {\n    errors.region = 'State/Region required';\n  }\n\n  if (!postal) {\n    errors.postal = 'Postal/Zip code required';\n  }\n\n  const body = {\n    first_name,\n    last_name,\n    address: {\n      line_1,\n      line_2,\n      city,\n      region,\n      postal,\n    }\n  };\n\n  // Check if all required fields are filled out\n  if (Object.keys(errors).length === 0) {\n    const data = createRatingProfile(body);\n\n    // Return data or return the error\n    if (data !== undefined && data !== null) {\n      return data\n    } else {\n      return 'Post unsuccessful';\n    }\n  } else {\n    console.log('errors', errors)\n    errors.error = true;\n    return errors;\n  }\n\n\n}\n\n// POST request to hit backend API\nconst createRatingProfile = async(values) =>  {\n  try {\n    const results = await axios.post(\"/posts/v1/quotes\", values);\n\n    if (results !== undefined && results !== null ) {\n      return results.data;\n    }\n\n  } catch (error) {\n    return error;\n\n  }\n}\n\n","import React, { useState } from 'react';\nimport { validate } from '../utils/utils';\nimport states from '../utils/states';\n\nconst RatingInformation = () => {\n\n\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    line_1: \"\",\n    line_2:\"\",\n    city: \"\",\n    region: \"\",\n    postal: \"\",\n    page_reload: \"\",\n  });\n\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = formData;\n\n  const onFormChange = e => {\n    setFormData({ ...formData, [e.target.name] : e.target.value});\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    // Validate and post data\n    const data = await validate(formData);\n\n    // Get correct time\n    const now = new Date().getTime();\n\n    if (now !== null && !data.error) {\n        localStorage.clear();\n        localStorage.setItem('setupTime', now);\n        localStorage.setItem('userData', JSON.stringify(data));\n        window.location.href = '/quote-overview';\n    }\n  };\n\n  // Get State values for dropdown\n  const stateOptions = Object.values(states).map(state => (\n    <option value={state} key={state}>{state}</option>\n  ))\n\n  return (\n    <div className=\"ratingInfoBackground\">\n      <form className=\"registration\" onSubmit={e => onFormSubmit(e)}>\n        <div className=\"form-group websiteGreeting\"> Welcome to Rocket-Insurance! Please enter your information below.</div>\n\n        <div className='form-group'>\n          <small>\n            First Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your first name?\"\n            name=\"first_name\"\n            value={first_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Last Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your last name?\"\n            name=\"last_name\"\n            value={last_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Address*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"Street Address, P.O. box, company name, c/o \"\n            name=\"line_1\"\n            value={line_1}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type=\"text\"\n            placeholder=\"apartment, suite, unit, building, floor, etc. \"\n            name=\"line_2\"\n            value={line_2}\n            onChange={e=>onFormChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            City*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. Los Angeles\"\n            name=\"city\"\n            value={city}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            State* <br/>\n          </small>\n          <select\n            className=\"state-dropdown\"\n            name=\"region\"\n            value={region}\n            onChange={e=>onFormChange(e)}\n            required\n          >\n          {stateOptions}\n          </select>\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Postal Code*\n          </small>\n          <input\n            type=\"number\"\n            placeholder=\"e.g. 90017\"\n            name=\"postal\"\n            value={postal}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <input className=\"submitButton\" type='submit'/>\n\n      </form>\n    </div>\n  )\n}\n\nexport default RatingInformation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/layout/Navbar\";\nimport QuoteOverview from \"./components/layout/QuoteOverview\";\nimport RatingInformation from \"./components/layout/RatingInformation\"\n\nimport \"./App.css\";\n\nconst App = () => (\n  <Router className=\"container\">\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/quote-overview\" component ={QuoteOverview} />\n        <Route exact path=\"/\" component={RatingInformation} />\n      </Switch>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}