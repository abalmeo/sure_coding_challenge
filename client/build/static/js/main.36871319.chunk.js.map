{"version":3,"sources":["components/layout/Navbar.js","components/layout/QuoteOverview.js","components/utils/utils.js","components/layout/RatingInformation.js","App.js","index.js"],"names":["Navigation","Navbar","sticky","bg","variant","Brand","href","className","Nav","Link","QuoteOverview","data","JSON","parse","localStorage","getItem","collisionPlan","deductiblePlan","setupTime","now","Date","getTime","useState","collision","deductible","insuranceData","setInsuranceData","onFormChange","e","target","name","value","clear","to","error","quote","rating_address","line_1","line_2","city","region","postal","policy_holder","first_name","last_name","variable_options","deductible_values","values","map","val","ind","key","collision_values","asteroid_collision","Row","Col","md","span","Card","text","style","width","height","Header","Body","Subtitle","onSubmit","preventDefault","setItem","onFormSubmit","title","Text","description","onChange","disabled","selected","type","validate","errors","body","address","Object","keys","length","createRatingProfile","undefined","console","log","a","axios","post","results","RatingInformation","page_reload","formData","setFormData","stringify","window","location","stateOptions","states","state","placeholder","required","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36871319.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst Navigation = () => {\n  return (\n    <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\n    <Navbar.Brand href=\"/\">\n      <i className=\"fas fa-rocket\"/>{\" \"}\n      <span>Rocket Insurance</span>\n      </Navbar.Brand>\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/\">Rating Information</Nav.Link>\n      <Nav.Link href=\"/quote-overview\">Quote Overview</Nav.Link>\n    </Nav>\n  </Navbar>\n  )\n}\n\n\nexport default Navigation\n","import React, {useState, useEffect} from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nconst QuoteOverview = () => {\n\n  // Get data from local storage\n  const data = JSON.parse(localStorage.getItem('userData'));\n  let collisionPlan = JSON.parse(localStorage.getItem('collisionPlan'));\n  let deductiblePlan = JSON.parse(localStorage.getItem('deductiblePlan'));\n  const setupTime = localStorage.getItem('setupTime');\n  const now = new Date().getTime();\n\n  const [insuranceData, setInsuranceData] = useState({\n    collision: \"\",\n    deductible: \"\",\n  });\n\n  const {\n    collision,\n    deductible,\n  } = insuranceData;\n\n  const onFormChange = e => {\n    setInsuranceData({ ...insuranceData, [e.target.name] : e.target.value});\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    // update time and add insurancePlan to local storage\n    localStorage.setItem('setupTime', now);\n    if (insuranceData.collision) {\n      localStorage.setItem('collisionPlan', collision);\n    }\n    if (insuranceData.deductible) {\n      localStorage.setItem('deductiblePlan', deductible)\n    }\n\n    setInsuranceData({\n      collisionPlan: collision,\n      deductiblePlan: deductible\n    });\n  };\n\n  // Clear localStorage if current time is 1 hour passed setupTime and redirect to form\n  if (now-setupTime > 1*60*60*1000) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Clear localStorage and Redirect to form if invalid data\n  if (data === null || data.error === true) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Destructuring response data\n  const {\n    quote: {\n      rating_address: {\n        line_1,\n        line_2,\n        city,\n        region,\n        postal\n      },\n      policy_holder: {\n        first_name,\n        last_name\n      },\n      variable_options,\n    }} = data;\n\n    // Mapping through returned values\n    const deductible_values = variable_options.deductible.values.map((val, ind) => (\n      <option value={val} key={val}> Option {ind+1}: ${val}</option>\n      )\n    );\n\n    const collision_values = variable_options.asteroid_collision.values.map((val, ind) => (\n      <option value={val}> Option {ind+1}: ${val}</option>\n    )\n  );\n\n  return (\n    <div className=\"quoteBackground\">\n      <Row>\n        <Col md={{span: 12}}>\n          <div className=\"userGreeting\">\n            Hi {first_name}, we're excited you've chosen us for rocket owner's insurance! Please see the available plans listed below.*\n          </div>\n        </Col>\n\n        <Col md={{span: 12}}>\n          <Card className=\"insuranceCard\" bg=\"info\" text=\"white\" style={{ width: '30rem', height: '40rem' }}>\n            <Card.Header className=\"cardOverview\">Profile</Card.Header>\n\n            <Card.Body style={{height: '1rem' }}>\n              <div>\n                <Card.Subtitle>Policy Holder: {first_name} {last_name}</Card.Subtitle><br/>\n                <Card.Subtitle>Address: {line_1} {line_2} {city}, {region} {postal}</Card.Subtitle>\n              </div>\n              <div>\n                <Card.Subtitle>Collision Plan: {collisionPlan} </Card.Subtitle>\n                <Card.Subtitle>Deductible Plan: {deductiblePlan} </Card.Subtitle>\n              </div>\n            </Card.Body>\n\n            <Card.Body>\n              <form className=\"insurance-registration\" onSubmit={e => onFormSubmit(e)} name=\"deductible\">\n                <Card.Subtitle className=\"cardOverview\">{variable_options.deductible.title}*</Card.Subtitle>\n                  <Card.Text>{variable_options.deductible.description}</Card.Text>\n                  <div>\n                    <select\n                      name=\"deductible\"\n                      className=\"insurance-selection\"\n                      value={deductible}\n                      onChange={e=>onFormChange(e)}\n                      >\n                        <option disabled selected value> -- select an option -- </option>\n                      {deductible_values}\n                    </select>\n                  </div>\n                  <Card.Subtitle className=\"cardOverview\">{variable_options.asteroid_collision.title}*</Card.Subtitle>\n                  <Card.Text>{variable_options.asteroid_collision.description}</Card.Text>\n                  <div>\n                  <select\n                    name=\"collision\"\n                    className=\"insurance-selection\"\n                    value={collision}\n                    onChange={e=>onFormChange(e)}\n                    >\n                    <option disabled selected value> -- select an option -- </option>\n                    {collision_values}\n                  </select>\n                  </div>\n                <input className=\"submitButton\" type='submit'/>\n              </form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default QuoteOverview;\n","import axios from \"axios\";\n// Validate incoming values\nexport const validate = values => {\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = values;\n\n  let errors = {};\n\n  if (!first_name) {\n    errors.first_name = 'First name is required';\n  }\n\n  if (!last_name) {\n    errors.last_name = 'Last name is required';\n  }\n\n  if (!line_1) {\n    errors.line_1 = 'Address required';\n  }\n\n  if (!city) {\n    errors.city = 'City required';\n  }\n\n  if (!region) {\n    errors.region = 'State/Region required';\n  }\n\n  if (!postal) {\n    errors.postal = 'Postal/Zip code required';\n  }\n\n  const body = {\n    first_name,\n    last_name,\n    address: {\n      line_1,\n      line_2,\n      city,\n      region,\n      postal,\n    }\n  };\n\n  // Check if all required fields are filled out\n  if (Object.keys(errors).length === 0) {\n    const data = createRatingProfile(body);\n\n    // Return data or return the error\n    if (data !== undefined && data !== null) {\n      return data\n    } else {\n      return 'Post unsuccessful';\n    }\n  } else {\n    console.log('errors', errors)\n    errors.error = true;\n    return errors;\n  }\n\n\n}\n\n// POST request to hit backend API\nconst createRatingProfile = async(values) =>  {\n  try {\n    const results = await axios.post(\"/posts/v1/quotes\", values);\n\n    if (results !== undefined && results !== null ) {\n      return results.data;\n    }\n\n  } catch (error) {\n    return error;\n\n  }\n}\n\n","import React, { useState } from 'react';\nimport { validate } from '../utils/utils';\nimport states from '../utils/states';\n\nconst RatingInformation = () => {\n\n\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    line_1: \"\",\n    line_2:\"\",\n    city: \"\",\n    region: \"\",\n    postal: \"\",\n    page_reload: \"\",\n  });\n\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = formData;\n\n  const onFormChange = e => {\n    setFormData({ ...formData, [e.target.name] : e.target.value});\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    // Validate and post data\n    const data = await validate(formData);\n\n    // Get correct time\n    const now = new Date().getTime();\n\n    if (now !== null && !data.error) {\n        localStorage.clear();\n        localStorage.setItem('setupTime', now);\n        localStorage.setItem('userData', JSON.stringify(data));\n        window.location.href = '/quote-overview';\n    }\n  };\n\n  // Get State values for dropdown\n  const stateOptions = Object.values(states).map(state => (\n    <option value={state} key={state}>{state}</option>\n  ))\n\n  return (\n    <div className=\"ratingInfoBackground\">\n      <form className=\"registration\" onSubmit={e => onFormSubmit(e)}>\n        <div className=\"form-group websiteGreeting\"> Welcome to Rocket-Insurance! Please enter your information below.</div>\n\n        <div className='form-group'>\n          <small>\n            First Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your first name?\"\n            name=\"first_name\"\n            value={first_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Last Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your last name?\"\n            name=\"last_name\"\n            value={last_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Address*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"Street Address, P.O. box, company name, c/o \"\n            name=\"line_1\"\n            value={line_1}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type=\"text\"\n            placeholder=\"apartment, suite, unit, building, floor, etc. \"\n            name=\"line_2\"\n            value={line_2}\n            onChange={e=>onFormChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            City*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. Los Angeles\"\n            name=\"city\"\n            value={city}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            State* <br/>\n          </small>\n          <select\n            className=\"state-dropdown\"\n            name=\"region\"\n            value={region}\n            onChange={e=>onFormChange(e)}\n            required\n          >\n          {stateOptions}\n          </select>\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Postal Code*\n          </small>\n          <input\n            type=\"number\"\n            placeholder=\"e.g. 90017\"\n            name=\"postal\"\n            value={postal}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <input className=\"submitButton\" type='submit'/>\n\n      </form>\n    </div>\n  )\n}\n\nexport default RatingInformation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/layout/Navbar\";\nimport QuoteOverview from \"./components/layout/QuoteOverview\";\nimport RatingInformation from \"./components/layout/RatingInformation\"\n\nimport \"./App.css\";\n\nconst App = () => (\n  <Router className=\"container\">\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/quote-overview\" component ={QuoteOverview} />\n        <Route exact path=\"/\" component={RatingInformation} />\n      </Switch>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}