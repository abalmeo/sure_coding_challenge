{"version":3,"sources":["components/layout/QuoteOverview.js","components/utils/utils.js","components/layout/RatingInformation.js","App.js","index.js"],"names":["QuoteOverview","props","data","JSON","parse","localStorage","getItem","setupTime","Date","getTime","clear","to","error","quote","rating_address","line_1","line_2","city","region","postal","policy_holder","first_name","last_name","variable_options","deductible_values","deductible","values","map","val","ind","key","collision_values","asteroid_collision","className","Row","Col","md","span","offset","Card","bg","text","style","width","height","Header","Body","Title","description","title","validate","errors","body","address","Object","keys","length","createRatingProfile","undefined","console","log","a","axios","post","results","RatingInformation","useState","page_reload","formData","setFormData","onFormChange","e","target","name","value","onFormSubmit","preventDefault","now","setItem","stringify","window","location","href","stateOptions","states","state","onSubmit","type","placeholder","onChange","required","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ded36c6.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Redirect } from \"react-router-dom\";\n\nconst QuoteOverview = props => {\n\n  const data = JSON.parse(localStorage.getItem('userData'));\n  const setupTime = localStorage.getItem('setupTime');\n  const now = new Date().getTime();\n\n  // Clear localStorage if current time is 1 hour passed setupTime and redirect to form\n  if (now-setupTime > 1*60*60*1000) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Clear localStorage and Redirect to form if invalid data\n  if (data === null || data.error === true) {\n    localStorage.clear();\n    return <Redirect to=\"/\" />;\n  }\n\n  // Destructuring response data\n  const {\n    quote: {\n      rating_address: {\n        line_1,\n        line_2,\n        city,\n        region,\n        postal\n      },\n      policy_holder: {\n        first_name,\n        last_name\n      },\n      variable_options,\n    }} = data;\n\n    const deductible_values = variable_options.deductible.values.map((val, ind) => (\n        <tr key={val + ind}>\n          <td>Option {ind + 1} : ${val}</td>\n        </tr>\n      )\n    );\n\n    const collision_values = variable_options.asteroid_collision.values.map((val, ind) => (\n      <tr key={val + ind}>\n        <td>Option {ind + 1} : ${val}</td>\n      </tr>\n    )\n  );\n\n\n  return (\n    <div className=\"quoteBackground\">\n      <div className=\" container userGreeting\">\n        Hi {first_name}, we're excited you've chosen us for rocket owner's insurance! Please see the available plans listed below.\n      </div>\n      <div></div>\n      <Row>\n        <Col md={{span: 3, offset: 1}}>\n            <Card className=\"insuranceCard\" bg=\"secondary\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n              <Card.Header className=\"cardOverview\">Profile</Card.Header>\n              <Card.Body>\n                <table>\n                  <tdata>Policy Holder: {first_name} {last_name}</tdata><br/>\n                  <tdata>Address: {line_1} {line_2} {city}, {region} {postal}</tdata>\n                </table>\n              </Card.Body>\n            </Card>\n        </Col>\n\n        <Col md={{span: 3, offset: 1}}>\n          <Card className=\"insuranceCard\" bg=\"warning\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n            <Card.Header className=\"cardOverview\">Deductible</Card.Header>\n            <Card.Body>\n              <Card.Title>{variable_options.deductible.description}</Card.Title>\n              <table>\n                <tbody>{deductible_values}</tbody>\n              </table>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={{span: 3, offset: 1}}>\n            <Card className=\"insuranceCard\" bg=\"info\" text=\"white\" style={{ width: '18rem', height: '20rem' }}>\n              <Card.Header className=\"cardOverview\">Asteroid Collision</Card.Header>\n              <Card.Body>\n                <Card.Title>{variable_options.asteroid_collision.title}</Card.Title>\n                <table>\n                  <tbody>{collision_values}</tbody>\n                </table>\n              </Card.Body>\n            </Card>\n          </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default QuoteOverview;\n","import axios from \"axios\";\n\n// Validate incoming values\nexport const validate = values => {\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = values;\n\n  let errors = {};\n\n  if (!first_name) {\n    errors.first_name = 'First name is required';\n  }\n\n  if (!last_name) {\n    errors.last_name = 'Last name is required';\n  }\n\n  if (!line_1) {\n    errors.line_1 = 'Address required';\n  }\n\n  if (!city) {\n    errors.city = 'City required';\n  }\n\n  if (!region) {\n    errors.region = 'State/Region required';\n  }\n\n  if (!postal) {\n    errors.postal = 'Postal/Zip code required';\n  }\n\n  const body = {\n    first_name,\n    last_name,\n    address: {\n      line_1,\n      line_2,\n      city,\n      region,\n      postal,\n    }\n  };\n\n  // Check if all required fields are filled out\n  if (Object.keys(errors).length === 0) {\n    const data = createRatingProfile(body);\n\n    // Return data or return the error\n    if (data !== undefined && data !== null) {\n      return data\n    } else {\n      return 'Post unsuccessful';\n    }\n  } else {\n    console.log('errors', errors)\n    errors.error = true;\n    return errors;\n  }\n\n\n}\n\n// POST request to hit backend API\nconst createRatingProfile = async(values) =>  {\n  try {\n    const results = await axios.post(\"/posts/v1/quotes\", values);\n\n    if (results !== undefined && results !== null ) {\n      return results.data;\n    }\n\n  } catch (error) {\n    return error;\n\n  }\n}\n\n","import React, { useState } from 'react';\nimport { validate } from '../utils/utils';\nimport states from '../utils/states';\n\nconst RatingInformation = () => {\n\n\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    line_1: \"\",\n    line_2:\"\",\n    city: \"\",\n    region: \"\",\n    postal: \"\",\n    page_reload: \"\",\n  });\n\n  const {\n    first_name,\n    last_name,\n    line_1,\n    line_2,\n    city,\n    region,\n    postal,\n  } = formData;\n\n  const onFormChange = e => {\n    setFormData({ ...formData, [e.target.name] : e.target.value});\n  };\n\n  const onFormSubmit = async e => {\n    e.preventDefault();\n\n    // Validate and post data\n    const data = await validate(formData);\n\n    // Get currect time\n    const now = new Date().getTime();\n\n    if (now !== null && !data.error) {\n        localStorage.clear();\n        localStorage.setItem('setupTime', now);\n        localStorage.setItem('userData', JSON.stringify(data));\n        window.location.href = '/quote-overview';\n    }\n  };\n\n  // Get State values for dropdown\n  const stateOptions = Object.values(states).map(state => (\n    <option value={state} key={state}>{state}</option>\n  ))\n\n  return (\n    <div className=\"ratingInfoBackground\">\n      <form className=\"registration\" onSubmit={e => onFormSubmit(e)}>\n        <div className=\"form-group websiteGreeting\"> Welcome to Rocket-Insurance! Please enter your information below.</div>\n\n        <div className='form-group'>\n          <small>\n            First Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your first name?\"\n            name=\"first_name\"\n            value={first_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Last Name*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"What is your last name?\"\n            name=\"last_name\"\n            value={last_name}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Address*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"Street Address, P.O. box, company name, c/o \"\n            name=\"line_1\"\n            value={line_1}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type=\"text\"\n            placeholder=\"apartment, suite, unit, building, floor, etc. \"\n            name=\"line_2\"\n            value={line_2}\n            onChange={e=>onFormChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            City*\n          </small>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. Los Angeles\"\n            name=\"city\"\n            value={city}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <small>\n            State* <br/>\n          </small>\n          <select\n            name=\"region\"\n            value={region}\n            onChange={e=>onFormChange(e)}\n            required\n          >\n          {stateOptions}\n          </select>\n        </div>\n\n        <div className='form-group'>\n          <small>\n            Postal Code*\n          </small>\n          <input\n            type=\"number\"\n            placeholder=\"e.g. 90017\"\n            name=\"postal\"\n            value={postal}\n            onChange={e=>onFormChange(e)}\n            required\n          />\n        </div>\n\n        <input className=\"submitButton\" type='submit'/>\n\n      </form>\n    </div>\n  )\n}\n\nexport default RatingInformation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport QuoteOverview from \"./components/layout/QuoteOverview\";\nimport RatingInformation from \"./components/layout/RatingInformation\"\n\nimport \"./App.css\";\n\nconst App = () => (\n  <Router className=\"container\">\n      <Switch>\n        <Route exact path=\"/quote-overview\" component ={QuoteOverview} />\n        <Route exact path=\"/\" component={RatingInformation} />\n      </Switch>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}